type User {
  id: ID! @id
  userName: String @unique
  email: String! @unique
  password: String!
  bio: String
  hashtags: [Hashtag!]! @relation(link: TABLE, name: "HashtagsByUser", onDelete: CASCADE)
  stories: [Story!]! @relation(name: "StoriesByUser", onDelete: CASCADE)
  drafts: [Story]! @relation(name: "StoriesByUser", onDelete: CASCADE)
  favoriteStories: [Story]! @relation(link: TABLE, name: "FavoriteStories", onDelete: CASCADE)
  following: [User!]! @relation(link: TABLE, name: "UserFollowing")
  followers: [User!]! @relation(link: TABLE, name: "UserFollower")
}

type Story {
  id: ID! @id
  createdAt: DateTime! @createdAt
  author: User! @relation(link: TABLE, name: "StoriesByUser")
  title: String! 
  content: String!  
  hashtags: [Hashtag!]! @relation(link: TABLE, name: "HashtagsByUser")
  likes: [User!]! @relation(link: TABLE, name: "UserLikes")
  loves: [User!]! @relation(link: TABLE, name: "UserLoves")
  neutrals: [User!]! @relation(link: TABLE, name: "UserNeutrals")
  sads: [User!]! @relation(link: TABLE, name: "UserSads")
  claps: [User!]! @relation(link: TABLE, name: "UserClaps")
  published: Boolean! @default(link: TABLE, value: false)
}

type Hashtag {
  id: ID! @id
  name: String!
}


